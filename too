#include <iostream>
using namespace std;

int filter[10][10];
int stamp[9];
bool vis[10];
int result;
int *m;
int *n;
int num;
int *out_list;
void dfs(int m, int n, int count)
{
	if(count>=m && count <=n)
	{
		result++;
	}
	for(int i=1;i<=9;i++)
	{
		if(count>0&&!vis[filter[stamp[count-1]][i]])
		continue;
		if(!vis[i])
		{
			vis[i]=1;
			stamp[count]=i;
			dfs(m,n,count+1);
			vis[i]=0;
		}
	}
	return ;
}
int main()
{

	cin >> num;
	m = new int(num);
	n = new int(num);
	out_list = new int(num);
	char c;
	for (int i=0;i<num;i++)
	{
		c=getchar();
		cin >> m[i];
		cin >> n[i];
	}
	memset(filter,0,sizeof(filter));
	filter[1][3]=filter[3][1]=2;
	filter[4][6]=filter[6][4]=5;
	filter[7][9]=filter[9][7]=8;
	filter[1][7]=filter[7][1]=4;
	filter[2][8]=filter[8][2]=5;
	filter[3][9]=filter[9][3]=6;
	filter[1][9]=filter[9][1]=5;
	filter[3][7]=filter[7][3]=5;
	for (int i=0;i<num;i++)
	{
		result=0;
		vis[0]=true;
		dfs(m[i],n[i],0);
		cout << result << endl;
	}
}
